}
)
output$rezerwacje<-renderDataTable({
rezerwacje<-loadData()
rezerwacje<-map_df(rezerwacje, rev)
rezerwacje<-datatable(rezerwacje, editable = TRUE, selection='single', options = list(autoWidth = TRUE, pageLength=15, columnDefs = list(list(visible=FALSE, targets=c(7:15, 17:22))), language = list(url = '//cdn.datatables.net/plug-ins/1.10.21/i18n/Polish.json')))
})
shinyjs::reset("dataOdDod")
shinyjs::reset("dataDoDod")
shinyjs::reset("samochodDod")
shinyjs::reset("kwotaDod")
shinyjs::reset("osobaDod")
shinyjs::reset("komentarzDod")
}
output$sprawdzenie1<-renderText({
if(input$dataDo<input$dataOd)
{
return("Sprawdz daty!")
}
})
})
observeEvent(input$dataDoDod,
{
ile=difftime(as.Date(input$dataDoDod), as.Date(input$dataOdDod))
output$ileDni<-renderText({
if(ile==1)
{
return( paste(ile, "doba", sep = " ") )
}
if(ile>1)
{
return( paste(ile, "dni", sep = " ") )
}
})
})
observeEvent(input$dataZawUmowy,
{
data=as.character(input$dataZawUmowy)
numer=str_replace_all(data, "-", "/")
updateTextInput(session, "numerUmowy", value = numer)
})
observeEvent(input$cena2,
{
ile=parse_number(input$cena2)
updateTextInput(session, "kwotaDod", value = ile)
})
observeEvent(input$add, {
rezerwacje<-loadData()
n<-(nrow(rezerwacje)+1)
rezerwacje[n,1]=as.character(input$dataOd)
rezerwacje[n,2]=as.character(input$dataDo)
rezerwacje[n,3]=input$samochod
rezerwacje[n,4]=input$kwota
if(input$klFirma==0)
{
rezerwacje[n,5]=input$osoba
}
if(input$klFirma==1)
{
rezerwacje[n,5]=input$wybFirma
}
rezerwacje[n,6]=input$komentarz
if((input$dataDo>=input$dataOd))
{
saveData(rezerwacje)
output$rezerwacje<-renderDataTable({
rezerwacje<-loadData()
rezerwacje<-map_df(rezerwacje, rev)
rezerwacje<-datatable(rezerwacje, editable = TRUE, selection='single', options = list(autoWidth = TRUE, pageLength=15, columnDefs = list(list(visible=FALSE, targets=c(7:15, 17:22))), language = list(url = '//cdn.datatables.net/plug-ins/1.10.21/i18n/Polish.json')))
})
output$dodajRez<-renderText({
return("Dodano rezerwację")
})
show("dodajRez")
delay(6000,hide("dodajRez"))
shinyjs::reset("dataOd")
shinyjs::reset("dataDo")
shinyjs::reset("samochod")
shinyjs::reset("kwota")
shinyjs::reset("osoba")
shinyjs::reset("komentarz")
}
output$sprawdzenie1<-renderText({
if(input$dataDo<input$dataOd)
{
return("Sprawdz daty!")
}
})
})
observeEvent(input$delete,
{
rezerwacje<-loadData()
rezerwacje<-map_df(rezerwacje, rev)
if(!is.null(input$rezerwacje_rows_selected))
{
confirmSweetAlert(
session = session,
inputId = "usunRezPotwierdz",
title = "Czy potwierdzasz usunięcie rezerwacji?",
text = paste(rezerwacje$samochod[as.numeric(input$rezerwacje_rows_selected)],
"przez", rezerwacje$imieNazw[as.numeric(input$rezerwacje_rows_selected)], sep = " "),
btn_labels = c("Anuluj", "Potwierdz")
)
}
})
observeEvent(input$usunRezPotwierdz,
if(isTRUE(input$usunRezPotwierdz))
{
rezerwacje<-loadData()
rezerwacje<-map_df(rezerwacje, rev)
rezerwacje<-rezerwacje[-as.numeric(input$rezerwacje_rows_selected),]
rezerwacje<-map_df(rezerwacje, rev)
saveData(rezerwacje)
output$rezerwacje<-renderDataTable(
{
rezerwacje<-loadData()
rezerwacje<-map_df(rezerwacje, rev)
rezerwacje<-datatable(rezerwacje, editable = TRUE, selection='single', options = list(autoWidth = TRUE, pageLength=15, columnDefs = list(list(visible=FALSE, targets=c(7:15, 17:22))), language = list(url = '//cdn.datatables.net/plug-ins/1.10.21/i18n/Polish.json')))
}
)
output$usunRez<-renderText({
return(input$usunRezPotwierdz)
})
show("usunRez")
delay(7000,hide("usunRez"))
}
)
observeEvent(input$refresh,
{
rezerwacje<-loadData()
samochody<-loadSam()
klienci<-loadKlient()
klienci<-map_df(klienci, rev)
firmy<-loadFir()
firmy<-map_df(firmy, rev)
wyborSam<-paste(samochody$numRej, samochody$model, sep = " ")
wyborOs<-paste(klienci$imie, klienci$nazwisko, klienci$telefon, sep = " ")
updateSelectInput(session, "osoba", "Wybierz osobę", choices = wyborOs)
updateSelectInput(session, "samochod", "Wybierz samochód:", choices = wyborSam)
updateSelectInput(session, "osobaDod", "Wybierz osobę", choices = wyborOs)
updateSelectInput(session, "samochodDod", "Wybierz samochód:", choices = wyborSam)
output$rezerwacje<-renderDataTable(
{
rezerwacje<-loadData()
rezerwacje<-map_df(rezerwacje, rev)
rezerwacje<-datatable(rezerwacje, editable = TRUE, selection='single', options = list(autoWidth = TRUE, pageLength=15, columnDefs = list(list(visible=FALSE, targets=c(7:15, 17:22))), language = list(url = '//cdn.datatables.net/plug-ins/1.10.21/i18n/Polish.json')))
}
)
})
observeEvent(input$aktualizuj,
{
rezerwacje<-loadData()
rezerwacje<-map_df(rezerwacje, rev)
klienci<-loadKlient()
if(!is.null(input$rezerwacje_rows_selected))
{
rezerwacja<-rezerwacje[as.numeric(input$rezerwacje_rows_selected),]
ktore<-as.numeric(input$rezerwacje_rows_selected)
spl<-strsplit(rezerwacja$imieNazw, " ")
str<-unlist(spl)
klient<-klienci[which(klienci$telefon==str[3]),]
if(nrow(klient)==0)
{
klient<-klienci[which(klienci$telefon==str[1]),]
}
if(nrow(klient)==0)
{
klient<-klienci[which(klienci$telefon==str[2]),]
}
osoba<-paste(klient$imie, klient$nazwisko, klient$telefon, sep = " ")
rezerwacje[ktore,5]<-osoba
rezerwacje<-map_df(rezerwacje, rev)
saveData(rezerwacje)
output$rezerwacje<-renderDataTable(
{
rezerwacje<-loadData()
rezerwacje<-map_df(rezerwacje, rev)
rezerwacje<-datatable(rezerwacje, editable = TRUE, selection='single', options = list(autoWidth = TRUE, pageLength=15, columnDefs = list(list(visible=FALSE, targets=c(7:15, 17:22))), language = list(url = '//cdn.datatables.net/plug-ins/1.10.21/i18n/Polish.json')))
}
)
}
})
output$reportNowy <- downloadHandler(
filename = paste('Umowa', Sys.time()+hours(czasZimaLato()),
'.pdf', sep=''),
content = function(file) {
{
if(!is.null(input$rezerwacje_rows_selected))
{
rezerwacje<-loadData()
rezerwacje<-map_df(rezerwacje, rev)
klienci<-loadKlient()
klienci<-map_df(klienci, rev)
firmy<-loadFir()
samochody<-loadSam()
rezerwacja<-rezerwacje[as.numeric(input$rezerwacje_rows_selected),]
spl<-strsplit(rezerwacja$imieNazw, " ")
str<-unlist(spl)
if(sum(str==("Firma:"))==0)
{
klient<-klienci[which(klienci$telefon==str[3]),]
if(nrow(klient)==0)
{
klient<-klienci[which(klienci$telefon==str[1]),]
}
if(nrow(klient)==0)
{
klient<-klienci[which(klienci$telefon==str[2]),]
}
imie=klient$imie %>% replace(., is.na(.), " ")
nazwisko=klient$nazwisko %>% replace(., is.na(.), " ")
kod=klient$kod %>% replace(., is.na(.), " ")
miasto=klient$miasto %>% replace(., is.na(.), " ")
ulica=klient$ulica %>% replace(., is.na(.), " ")
telefon=klient$telefon %>% replace(., is.na(.), " ")
dowod=klient$dowod %>% replace(., is.na(.), " ")
pesel=klient$pesel %>% replace(., is.na(.), " ")
katPraw=klient$kat %>% replace(., is.na(.), " ")
numPraw=klient$numPraw %>% replace(., is.na(.), " ")
aut<-strsplit(rezerwacja$samochod, " ")
aut1<-unlist(aut)
auto<-samochody[which(samochody$numRej==aut1[1]),]
marka=auto$marka %>% replace(., is.na(.), " ")
model=auto$model %>% replace(., is.na(.), " ")
vin=auto$vin %>% replace(., is.na(.), " ")
numRej=auto$numRej %>% replace(., is.na(.), " ")
dowodRej=auto$dowod %>% replace(., is.na(.), " ")
paliwo=auto$paliwo %>% replace(., is.na(.), " ")
stanPaliwa=rezerwacja$stanPaliwa %>% replace(., is.na(.), " ")
stanLicznika=rezerwacja$stanLicznika %>% replace(., is.na(.), " ")
zewnatrz=rezerwacja$zewnatrz %>% replace(., is.na(.), " ")
wewnatrz=rezerwacja$wewnatrz %>% replace(., is.na(.), " ")
przekazano=rezerwacja$przekazano %>% replace(., is.na(.), "")
if(przekazano=="")
{
przekazano="........."
}
dataOd=rezerwacja$dataOd %>% replace(., is.na(.), " ")
dataDo=rezerwacja$dataDo %>% replace(., is.na(.), " ")
godzinaOd=rezerwacja$godzinaOd %>% replace(., is.na(.), " ")
godzinaDo=rezerwacja$godzinaDo %>% replace(., is.na(.), " ")
dataZawUmowy=rezerwacja$dataZawUmowy %>% replace(., is.na(.), "")
if(dataZawUmowy=="")
{
dataZawUmowy="........."
}
numerUmowy=rezerwacja$numerUmowy %>% replace(., is.na(.), "")
if(numerUmowy=="")
{
numerUmowy="........."
}
limit1=rezerwacja$limit1 %>% replace(., is.na(.), "")
if(limit1=="")
{
limit1="........."
}
limit2=rezerwacja$limit2 %>% replace(., is.na(.), "")
if(limit2=="")
{
limit2="........."
}
cena1=rezerwacja$cena1 %>% replace(., is.na(.), "")
if(cena1=="")
{
cena1="........."
}
jednCzasu=rezerwacja$jednCzasu %>% replace(., is.na(.), "")
if(jednCzasu=="")
{
jednCzasu="........."
}
cena2=rezerwacja$cena2 %>% replace(., is.na(.), "")
if(cena2=="")
{
cena2="........."
}
kaucja=rezerwacja$kaucja %>% replace(., is.na(.), "")
if(kaucja=="")
{
kaucja="........."
}
zagranica=rezerwacja$zagranica %>% replace(., is.na(.), "")
if(zagranica=="")
{
zagranica="........."
}
params <- list(Imie = imie, Nazwisko=nazwisko, Telefon=telefon, Kod=kod, Miasto=miasto, Ulica=ulica, Pesel=pesel, Dowod=dowod, KatPraw=katPraw, NumPraw=numPraw,
Marka=marka, Model=model, Vin=vin, NumRej=numRej, DowodRej=dowodRej, DataOd=dataOd, DataDo=dataDo,
Paliwo=paliwo, StanPaliwa=stanPaliwa, StanLicznika=stanLicznika, Zewnatrz=zewnatrz, Wewnatrz=wewnatrz, Przekazano=przekazano,
GodzinaOdDod=godzinaOd, GodzinaDoDod=godzinaDo, DataZawUmowy=dataZawUmowy, NumerUmowy=numerUmowy,
Limit1=limit1, Limit2=limit2, Cena1=cena1, JednCzasu=jednCzasu, Cena2=cena2, Kaucja=kaucja, Zagranica=zagranica)
if(input$firmaKtora==2)
{
rmarkdown::render("RMD/automatyczny.rmd", output_file = file,
params = params,
envir = new.env(parent = globalenv())
)
output$pobrano<-renderText({
return("Pobrano umowę, sprawdź w pobranych")
})
}
if(input$firmaKtora==1)
{
rmarkdown::render("RMD/auto2.rmd", output_file = file,
params = params,
envir = new.env(parent = globalenv())
)
}
}
if(sum(str==("Firma:"))>0)
{
podzial<-strsplit(rezerwacja$imieNazw, "Firma: ")
podzial2=unlist(podzial)
nazwa=podzial2[2]
firma<-firmy[which(firmy$nazwa==nazwa),]
imie=firma$imie %>% replace(., is.na(.), " ")
nazwisko=firma$nazwisko %>% replace(., is.na(.), " ")
telefon=firma$telefon %>% replace(., is.na(.), " ")
dowod=firma$dowod %>% replace(., is.na(.), " ")
pesel=firma$pesel %>% replace(., is.na(.), " ")
katPraw=firma$katPraw %>% replace(., is.na(.), " ")
numPraw=firma$numPraw %>% replace(., is.na(.), " ")
nazwaFir = firma$nazwa %>% replace(., is.na(.), " ")
nipFir = firma$nip %>% replace(., is.na(.), " ")
uLFir = firma$ul %>% replace(., is.na(.), " ")
miastoFir = firma$miejsc %>% replace(., is.na(.), " ")
kodFir = firma$kod %>% replace(., is.na(.), " ")
regonFir = firma$regon %>% replace(., is.na(.), " ")
aut<-strsplit(rezerwacja$samochod, " ")
aut1<-unlist(aut)
auto<-samochody[which(samochody$numRej==aut1[1]),]
marka=auto$marka %>% replace(., is.na(.), " ")
model=auto$model %>% replace(., is.na(.), " ")
vin=auto$vin %>% replace(., is.na(.), "")
numRej=auto$numRej %>% replace(., is.na(.), " ")
dowodRej=auto$dowod %>% replace(., is.na(.), " ")
paliwo=auto$paliwo %>% replace(., is.na(.), " ")
stanPaliwa=rezerwacja$stanPaliwa %>% replace(., is.na(.), " ")
stanLicznika=rezerwacja$stanLicznika %>% replace(., is.na(.), " ")
zewnatrz=rezerwacja$zewnatrz %>% replace(., is.na(.), " ")
wewnatrz=rezerwacja$wewnatrz %>% replace(., is.na(.), " ")
przekazano=rezerwacja$przekazano %>% replace(., is.na(.), "")
if(przekazano=="")
{
przekazano="........."
}
dataOd=rezerwacja$dataOd %>% replace(., is.na(.), " ")
dataDo=rezerwacja$dataDo %>% replace(., is.na(.), " ")
godzinaOd=rezerwacja$godzinaOd %>% replace(., is.na(.), " ")
godzinaDo=rezerwacja$godzinaDo %>% replace(., is.na(.), " ")
dataZawUmowy=rezerwacja$dataZawUmowy %>% replace(., is.na(.), "")
if(dataZawUmowy=="")
{
dataZawUmowy="........."
}
numerUmowy=rezerwacja$numerUmowy %>% replace(., is.na(.), "")
if(numerUmowy=="")
{
numerUmowy="........."
}
limit1=rezerwacja$limit1 %>% replace(., is.na(.), "")
if(limit1=="")
{
limit1="........."
}
limit2=rezerwacja$limit2 %>% replace(., is.na(.), "")
if(limit2=="")
{
limit2="........."
}
cena1=rezerwacja$cena1 %>% replace(., is.na(.), "")
if(cena1=="")
{
cena1="........."
}
jednCzasu=rezerwacja$jednCzasu %>% replace(., is.na(.), "")
if(jednCzasu=="")
{
jednCzasu="........."
}
cena2=rezerwacja$cena2 %>% replace(., is.na(.), "")
if(cena2=="")
{
cena2="........."
}
kaucja=rezerwacja$kaucja %>% replace(., is.na(.), "")
if(kaucja=="")
{
kaucja="........."
}
zagranica=rezerwacja$zagranica %>% replace(., is.na(.), "")
if(zagranica=="")
{
zagranica="........."
}
params2 <- list(NazwaFir = nazwaFir, NipFir = nipFir, ULFir = uLFir, KodFir = kodFir, MiastoFir = miastoFir, RegonFir = regonFir,
Imie = imie, Nazwisko = nazwisko, Telefon = telefon, Dowod = dowod, Pesel = pesel, KatPraw = katPraw, NumPraw = numPraw,
Marka=marka, Model=model, Vin=vin, NumRej=numRej, DowodRej=dowodRej, DataOd=dataOd, DataDo=dataDo, Paliwo=paliwo,
StanPaliwa=stanPaliwa, StanLicznika=stanLicznika, Zewnatrz=zewnatrz, Wewnatrz=wewnatrz, Przekazano=przekazano,
GodzinaOdDod=godzinaOd, GodzinaDoDod=godzinaDo, DataZawUmowy=dataZawUmowy, NumerUmowy=numerUmowy,
Limit1=limit1, Limit2=limit2, Cena1=cena1, JednCzasu=jednCzasu, Cena2=cena2, Kaucja=kaucja, Zagranica=zagranica)
if(input$firmaKtora==2)
{
rmarkdown::render("RMD/autoFir1.rmd", output_file = file,
params = params2,
envir = new.env(parent = globalenv())
)
}
if(input$firmaKtora==1)
{
rmarkdown::render("RMD/autoFir2.rmd", output_file = file,
params = params2,
envir = new.env(parent = globalenv())
)
}
}
}
}
}
)
#do kalendarza
samochody<-loadSam()
wyborSam<-paste(samochody$numRej, samochody$model, sep = " ")
updateSelectInput(session, "samochod", "Wybierz samochod", choices = wyborSam)
runApp()
source("R/libraries.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("R/libraries.R")
source("R/functions.R")
runApp()
samochody<-loadSam()
samochody
samochody <- loadSam()
rezerwacje <- loadData()
klienci <- loadKlient()
runApp()
runApp()
runApp()
icon("right-to-bracket", verify_fa = FALSE)
runApp()
??ixon
??icon
install.packages(c("shinyalert", "shinyauthr", "shinydashboard", "shinyjs", "shinytest", "shinythemes", "shinyWidgets"))
shiny::runApp()
runApp()
runApp()
runApp()
source("R/libraries.R")
source("R/functions.R")
samochody <- loadSam()
rezerwacje <- loadData()
klienci <- loadKlient()
runApp()
runApp()
source("R/fitstStart.R")
source("R/firstStart.R")
runApp()
runApp()
runApp()
runApp()
source("R/firstStart.R")
runApp()
firmy<-loadFir()
firmy<-map_df(firmy, rev)
firmy<-as.data.frame(firmy)
firmy
firmy<-firmy[,c(1:8)]
firmy
colnames(firmy)[7:8]<-c("email", "telefon")
firmy
saveFir(firmy)
runApp()
runApp()
runApp()
runApp()
shiny::runApp('R')
runApp('R')
ggplot(wybrane, aes(x=samochod, y=kwota, fill=samochod, col=kwota))+
geom_bar(stat = "identity")+guides(col=FALSE)+
ggtitle("Wykres zarobków z danego okresu
")+
stat_summary(aes(label = stat(y)), fun = 'sum', geom = 'text', col = 'black', vjust = -0.5) +
theme(plot.title = element_text(size=34))+
theme(legend.title = element_text(size = 22),
legend.text = element_text(size = 20),
axis.text.x=element_blank(),
axis.text.y=element_text(size=18,face="bold"),
axis.title=element_text(size=18,face="bold"))
output$wykresZarobki<-renderPlot({
theme_set(theme_minimal())
ggplot(wybrane, aes(x=samochod, y=kwota, fill=samochod, col=kwota))+
geom_bar(stat = "identity")+guides(col=FALSE)+
ggtitle("Wykres zarobków z danego okresu
")+
stat_summary(aes(label = stat(y)), fun = 'sum', geom = 'text', col = 'black', vjust = -0.5) +
theme(plot.title = element_text(size=34))+
theme(legend.title = element_text(size = 22),
legend.text = element_text(size = 20),
axis.text.x=element_blank(),
axis.text.y=element_text(size=18,face="bold"),
axis.title=element_text(size=18,face="bold"))
}, height=450, width=800)
runApp()
runApp()
runApp()
runApp()
